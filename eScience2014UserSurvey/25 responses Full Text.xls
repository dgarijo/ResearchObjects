<html><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8" /></head><body><table><!--startofrow--><tr><td>Q1</td><td>Q2</td><td>Q3</td><td>Q4</td><td>Q5-1</td><td>Q5-2</td><td>Q6</td><td>Q7-1</td><td>Q7-2</td><td>Q7-3</td><td>Q7-4</td><td>Q7-5</td><td>Q7-6</td><td>Q7-7</td><td>Q7-8</td><td>Q7-9</td><td>Q8</td><td>Q9-1</td><td>Q9-2</td><td>Q9-3</td><td>Q10</td><td>Q11-1</td><td>Q11-2</td><td>Q11-3</td><td>Q11-4</td><td>Q11-5</td><td>Q12-1</td><td>Q12-2</td><td>Q12-3</td><td>Q12-4</td><td>Q12-5</td><td>Q13-1</td><td>Q13-2</td><td>Q13-3</td><td>Q13-4</td><td>Q14</td><td>Q15-1</td><td>Q15-2</td><td>Q15-3</td><td>Q15-4</td><td>Q15-5</td><td>Q16</td><td>Q17-1</td><td>Q17-2</td><td>Q18-1</td><td>Q18-2</td><td>Q18-3</td><td>Q18-4</td><td>Q19</td><td>Q20-1</td><td>Q20-2</td><td>Q20-3</td><td>Q20-4</td><td>Q21</td><td>Q22-1</td><td>Q22-2</td><td>Q22-3</td><td>Q22-4</td><td>Q22-5</td><td>Q23-1</td><td>Q23-2</td><td>Q23-3</td><td>Q23-4</td><td>Q23-5</td><td>Q24</td><td>Q25-1</td><td>Q25-2</td><td>Q25-3</td><td>Q25-4</td><td>Q25-5</td><td>Q26</td><td>Q27-1</td><td>Q27-2</td><td>Q27-3</td><td>Q28-1</td><td>Q28-2</td><td>Q28-3</td><td>Q29</td><td>Q30</td><td></td></tr><!--endofrow-->
<!--startofrow--><tr><td>Is writing code important for being able to do research in a neuroimaging lab?</td><td>If it is, is sharing code with other researchers useful?</td><td>Is the LONI pipeline workflow system useful?</td><td>Is LONI pipeline useful for creating workflows (pipelines)?</td><td>If not, why?  </td><td></td><td>Is creating workflows (pipelines) useful?</td><td>Why is creating workflows (pipelines) useful? Select all that apply</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>Is reusing previously created workflows (pipelines) in new analyses useful?</td><td>Why is reusing previously created workflows (pipelines) useful? Select all that apply</td><td></td><td></td><td>Is it useful to share workflows (pipelines) with other researchers?</td><td>Why is it useful to share workflows (pipelines) with other researchers? Select all that apply</td><td></td><td></td><td></td><td></td><td>If not, why are workflows (pipelines) not shared? Select all that apply</td><td></td><td></td><td></td><td></td><td>What is the most usual size of workflows (pipelines)? Select all that apply</td><td></td><td></td><td></td><td>Is it useful to reuse workflows (pipelines) from other researchers?  </td><td>If not, why? Select all that apply</td><td></td><td></td><td></td><td></td><td>Is the groupings functionality of the workflow system useful?  </td><td>If not, why?</td><td></td><td>What are the benefits of using groupings? Select all that apply</td><td></td><td></td><td></td><td>Is it useful to reuse previous groupings in new work?  </td><td>Why is reusing previously created groupings useful? Select all that apply</td><td></td><td></td><td></td><td>Is it useful to share your own previous groupings with other researchers?  </td><td>Why is it useful to share your own previous groupings with other researchers? Select all that apply</td><td></td><td></td><td></td><td></td><td>If not, why are groupings not shared? Select all that apply</td><td></td><td></td><td></td><td></td><td>Are groupings from other researchers reused?  </td><td>If not, why are they not reused?</td><td></td><td></td><td></td><td></td><td>Are workflows (pipelines) linked to publications?  </td><td>How is this done? Select all that apply</td><td></td><td></td><td>When workflows are not linked to publications, why is that? Select all that apply</td><td></td><td></td><td>Would you like to add any other comments on the topics of the questions above?</td><td>Do you have any comments about this survey?</td><td>Date taken</td><td>Your tracking code</td><td>First name</td><td>Last name</td><td>E-mail address</td><td>Custom entry</td><td>Launch Code</td><td>Country Code</td><td>Region Code</td></tr><!--endofrow-->
<!--startofrow--><tr><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>It is difficult to understand what they do</td><td>It is difficult to understand how to prepare the data</td><td>They are too specific</td><td>It is hard to make them work</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>11/05/2014 23:42:00</td><td></td><td></td><td></td><td></td><td></td><td></td><td>US</td><td>CA</td></tr><!--endofrow-->
<!--startofrow--><tr><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>pain to disect when debugging to know where things failed</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>12/05/2014 14:08:00</td><td></td><td></td><td></td><td></td><td></td><td></td><td>US</td><td>CT</td></tr><!--endofrow-->
<!--startofrow--><tr><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>N/A I have not yet created my own pipelines</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>12/05/2014 17:42:00</td><td></td><td></td><td></td><td></td><td></td><td></td><td>US</td><td>CA</td></tr><!--endofrow-->
<!--startofrow--><tr><td>Often</td><td>Very often</td><td>Very often</td><td>Very often</td><td></td><td></td><td>Very often</td><td></td><td>Workflows (pipelines) make it easier to track and debug complex code</td><td></td><td></td><td>Workflows (pipelines) make me think of making my code modular and more reusable</td><td>Workflows (pipelines) are a convenient way to make my methods more understandable</td><td>Workflows (pipelines) are a useful visualization of an overall analysis</td><td>Workflows (pipelines) facilitate reproducibility</td><td></td><td>Very often</td><td>It saves time to reuse components from my previous workflows (pipelines)</td><td>Workflows (pipelines) give a high-level diagram that helps remember what was done</td><td></td><td>Very often</td><td>Non-programmers can use the workflows (pipelines) to run code easily</td><td>New students and new people in the lab can easily use workflows (pipelines)</td><td>It saves them time because they do not have to re-implement the code</td><td>It makes everyone think of standards by adopting the ways others do things</td><td></td><td></td><td></td><td></td><td></td><td></td><td>1-5 Components</td><td>5-10 Components</td><td>10-20 Components</td><td>>20 Components</td><td>Very often</td><td></td><td></td><td></td><td></td><td></td><td>Very often</td><td></td><td></td><td></td><td>To simplify workflows (pipelines) that are complex overall</td><td>To make workflows (pipelines) more understandable to others</td><td></td><td>Very often</td><td>It saves time to reuse groupings instead of whole workflows (pipelines)</td><td>Groupings are a convenient way to make my code modular</td><td>Groupings are a convenient way to make my methods more understandable</td><td></td><td>Very often</td><td>Non-programmers can use groupings more easily than whole workflows (pipelines)</td><td>New students and new people in the lab can easily use groupings</td><td>It saves them time because they do not have to re-implement the code</td><td>It makes everyone think of standards by adopting the ways others do things</td><td></td><td></td><td></td><td></td><td></td><td></td><td>Often</td><td></td><td></td><td></td><td></td><td></td><td>Often</td><td>Keeping laboratory notes about what workflows (pipelines) were used in a paper</td><td>Posting links publicly in a project or personal Web site</td><td></td><td></td><td></td><td></td><td></td><td></td><td>13/05/2014 19:29:00</td><td></td><td></td><td></td><td></td><td></td><td></td><td>US</td><td>MI</td></tr><!--endofrow-->
<!--startofrow--><tr><td>Very often</td><td>Very often</td><td>Very often</td><td>Very often</td><td></td><td></td><td>Very often</td><td>It saves time to reuse components from my previous workflows (pipelines)</td><td></td><td>Workflows (pipelines) are a convenient way to organize and store my code</td><td>Workflows (pipelines) make me think of organizing my code better</td><td></td><td></td><td></td><td>Workflows (pipelines) facilitate reproducibility</td><td></td><td>Often</td><td>It saves time to reuse components from my previous workflows (pipelines)</td><td>Workflows (pipelines) give a high-level diagram that helps remember what was done</td><td></td><td>Very often</td><td>Non-programmers can use the workflows (pipelines) to run code easily</td><td>New students and new people in the lab can easily use workflows (pipelines)</td><td>It saves them time because they do not have to re-implement the code</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>5-10 Components</td><td></td><td></td><td>Very often</td><td></td><td></td><td></td><td></td><td></td><td>Often</td><td></td><td></td><td>To have nice visualizations of an analysis</td><td>To simplify workflows (pipelines) that are complex overall</td><td>To make workflows (pipelines) more understandable to others</td><td></td><td>Often</td><td>It saves time to reuse groupings instead of whole workflows (pipelines)</td><td>Groupings are a convenient way to make my code modular</td><td></td><td></td><td>Very often</td><td>Non-programmers can use groupings more easily than whole workflows (pipelines)</td><td>New students and new people in the lab can easily use groupings</td><td>It saves them time because they do not have to re-implement the code</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>Sometimes</td><td></td><td></td><td></td><td>It is hard to make them work</td><td></td><td>Very often</td><td></td><td>Posting links publicly in a project or personal Web site</td><td></td><td>People do not know how to do it</td><td></td><td></td><td></td><td></td><td>14/05/2014 06:13:00</td><td></td><td></td><td></td><td></td><td></td><td></td><td>US</td><td>CA</td></tr><!--endofrow-->
<!--startofrow--><tr><td>Very often</td><td>Very often</td><td>Very often</td><td>Very often</td><td></td><td></td><td>Very often</td><td></td><td></td><td>Workflows (pipelines) are a convenient way to organize and store my code</td><td></td><td>Workflows (pipelines) make me think of making my code modular and more reusable</td><td>Workflows (pipelines) are a convenient way to make my methods more understandable</td><td></td><td></td><td></td><td>Sometimes</td><td>It saves time to reuse components from my previous workflows (pipelines)</td><td></td><td></td><td>Very often</td><td>Non-programmers can use the workflows (pipelines) to run code easily</td><td>New students and new people in the lab can easily use workflows (pipelines)</td><td>It saves them time because they do not have to re-implement the code</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>1-5 Components</td><td></td><td></td><td></td><td>Occasionally</td><td></td><td></td><td></td><td></td><td></td><td>Often</td><td></td><td></td><td></td><td></td><td>To make workflows (pipelines) more understandable to others</td><td></td><td>Often</td><td>It saves time to reuse groupings instead of whole workflows (pipelines)</td><td>Groupings are a convenient way to make my code modular</td><td>Groupings are a convenient way to make my methods more understandable</td><td></td><td>Often</td><td>Non-programmers can use groupings more easily than whole workflows (pipelines)</td><td>New students and new people in the lab can easily use groupings</td><td>It saves them time because they do not have to re-implement the code</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>Occasionally</td><td></td><td></td><td></td><td></td><td></td><td>Never</td><td></td><td></td><td></td><td></td><td></td><td>workflow is not important, the key is the methodology behind. So usually we only present the methodology and result in the publications.</td><td></td><td></td><td>14/05/2014 06:16:00</td><td></td><td></td><td></td><td></td><td></td><td></td><td>  </td><td>  </td></tr><!--endofrow-->
<!--startofrow--><tr><td>Often</td><td>Occasionally</td><td>Often</td><td>Often</td><td></td><td></td><td>Often</td><td>It saves time to reuse components from my previous workflows (pipelines)</td><td>Workflows (pipelines) make it easier to track and debug complex code</td><td></td><td></td><td></td><td>Workflows (pipelines) are a convenient way to make my methods more understandable</td><td>Workflows (pipelines) are a useful visualization of an overall analysis</td><td>Workflows (pipelines) facilitate reproducibility</td><td></td><td>Sometimes</td><td>It saves time to reuse components from my previous workflows (pipelines)</td><td>Workflows (pipelines) give a high-level diagram that helps remember what was done</td><td></td><td>Sometimes</td><td>Non-programmers can use the workflows (pipelines) to run code easily</td><td>New students and new people in the lab can easily use workflows (pipelines)</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>5-10 Components</td><td></td><td></td><td>Occasionally</td><td></td><td></td><td></td><td></td><td></td><td>Sometimes</td><td></td><td></td><td>To have nice visualizations of an analysis</td><td>To simplify workflows (pipelines) that are complex overall</td><td>To make workflows (pipelines) more understandable to others</td><td></td><td>Often</td><td>It saves time to reuse groupings instead of whole workflows (pipelines)</td><td></td><td>Groupings are a convenient way to make my methods more understandable</td><td></td><td>Never</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>others want a finished product  not pieces they have to put together on their own</td><td>I don't know</td><td></td><td></td><td></td><td></td><td></td><td>Sometimes</td><td>Keeping laboratory notes about what workflows (pipelines) were used in a paper</td><td>Posting links publicly in a project or personal Web site</td><td></td><td></td><td></td><td></td><td></td><td></td><td>14/05/2014 06:40:00</td><td></td><td></td><td></td><td></td><td></td><td></td><td>US</td><td>CA</td></tr><!--endofrow-->
<!--startofrow--><tr><td>Occasionally</td><td>Sometimes</td><td>Often</td><td>Often</td><td></td><td></td><td>Often</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>Workflows are mainly used for population studies so that you can run many subjects in the same time, and it is easy to pass around to someone who doesn't know how to code.</td><td>Occasionally</td><td></td><td></td><td></td><td>Occasionally</td><td>Non-programmers can use the workflows (pipelines) to run code easily</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>1-5 Components</td><td>5-10 Components</td><td></td><td></td><td>Occasionally</td><td></td><td></td><td></td><td></td><td></td><td>Occasionally</td><td></td><td></td><td>To have nice visualizations of an analysis</td><td></td><td></td><td></td><td>Never</td><td></td><td></td><td></td><td></td><td>Occasionally</td><td>Non-programmers can use groupings more easily than whole workflows (pipelines)</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>Never</td><td></td><td></td><td></td><td></td><td>Not related to my work</td><td>Occasionally</td><td>Keeping laboratory notes about what workflows (pipelines) were used in a paper</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>14/05/2014 17:00:00</td><td></td><td></td><td></td><td></td><td></td><td></td><td>US</td><td>IL</td></tr><!--endofrow-->
<!--startofrow--><tr><td>Very often</td><td>Very often</td><td>Very often</td><td>Often</td><td></td><td></td><td>Very often</td><td>It saves time to reuse components from my previous workflows (pipelines)</td><td></td><td>Workflows (pipelines) are a convenient way to organize and store my code</td><td></td><td></td><td></td><td>Workflows (pipelines) are a useful visualization of an overall analysis</td><td>Workflows (pipelines) facilitate reproducibility</td><td></td><td>Often</td><td>It saves time to reuse components from my previous workflows (pipelines)</td><td>Workflows (pipelines) give a high-level diagram that helps remember what was done</td><td></td><td>Often</td><td>Non-programmers can use the workflows (pipelines) to run code easily</td><td>New students and new people in the lab can easily use workflows (pipelines)</td><td>It saves them time because they do not have to re-implement the code</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>1-5 Components</td><td>5-10 Components</td><td></td><td></td><td>Often</td><td></td><td></td><td></td><td></td><td></td><td>I don't know</td><td></td><td></td><td></td><td></td><td></td><td></td><td>I don't know</td><td></td><td></td><td></td><td></td><td>I don't know</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>I don't know</td><td></td><td></td><td></td><td></td><td></td><td>Sometimes</td><td></td><td>Posting links publicly in a project or personal Web site</td><td></td><td></td><td></td><td></td><td></td><td></td><td>14/05/2014 20:48:00</td><td></td><td></td><td></td><td></td><td></td><td></td><td>US</td><td>CA</td></tr><!--endofrow-->
<!--startofrow--><tr><td>Sometimes</td><td>Very often</td><td>Often</td><td>Very often</td><td></td><td>sometimes it is easier to run a certain command in loops or batches  or to edit the various input/output parameters (file names, paths, options, etc) on command line, rather than clicking through the gui</td><td>Often</td><td></td><td></td><td>Workflows (pipelines) are a convenient way to organize and store my code</td><td></td><td></td><td>Workflows (pipelines) are a convenient way to make my methods more understandable</td><td></td><td></td><td>the main reason is that it is easy to send a prepared pipeline to another researcher and they can usually figure out how to use it, regardless of their programing knowedgle</td><td>Very often</td><td>It saves time to reuse components from my previous workflows (pipelines)</td><td>Workflows (pipelines) give a high-level diagram that helps remember what was done</td><td>we often re-run the exact same or very similar analysis steps on our data (ex- preprocessing, statistical tests), so often we only need to change the inputs and outputs (and maybe some parameters)</td><td>Very often</td><td>Non-programmers can use the workflows (pipelines) to run code easily</td><td>New students and new people in the lab can easily use workflows (pipelines)</td><td></td><td>It makes everyone think of standards by adopting the ways others do things</td><td></td><td>Others would not want to use them</td><td>Others ask too many questions to the creators of the workflows (pipelines)</td><td>Workflows (pipelines) created by others are difficult to understand</td><td>It is difficult to understand how to prepare the data for a workflow (pipeline)</td><td>all of the above are true in some cases. The best pipelines to share are ones that have all the kinks worked out, so we can explain how to edit the input and output filenames and then the person can click play. (or we can even set up the pipeline for them to use on the first iteration and how them what to change in future)</td><td>1-5 Components</td><td></td><td></td><td></td><td>Very often</td><td></td><td></td><td>Workflows (pipelines) created by others are often too specific</td><td></td><td>this can be easily fixed by adding comments o providing a verbal/written explanation along with the pipeline</td><td>I don't know</td><td></td><td>I am not sure what this is, maybe I am using and do not know that it is called groupings?</td><td></td><td></td><td></td><td>??</td><td>I don't know</td><td></td><td></td><td></td><td>??</td><td>I don't know</td><td></td><td></td><td></td><td></td><td>??</td><td></td><td></td><td></td><td></td><td>??</td><td>I don't know</td><td></td><td></td><td></td><td></td><td>??</td><td>Occasionally</td><td>Keeping laboratory notes about what workflows (pipelines) were used in a paper</td><td></td><td>in the comments section of the pipeline, the author can enter in publication info. Also, the author can indicate the pipeline's name in a paper and then can add that pipeline to the pipeline library. Then it can be found by any pipeline user, simply by searching in the library toolbar in the pipeline progam</td><td></td><td></td><td>I am not sure. I would guess that it happens when the workflow is a combination of existing processing steps rather than a novel tool</td><td></td><td>very thorough</td><td>14/05/2014 22:41:00</td><td></td><td></td><td></td><td></td><td></td><td></td><td>US</td><td>CA</td></tr><!--endofrow-->
<!--startofrow--><tr><td>Very often</td><td>Sometimes</td><td>Very often</td><td>Often</td><td></td><td></td><td>Often</td><td>It saves time to reuse components from my previous workflows (pipelines)</td><td>Workflows (pipelines) make it easier to track and debug complex code</td><td></td><td></td><td></td><td></td><td>Workflows (pipelines) are a useful visualization of an overall analysis</td><td></td><td></td><td>Sometimes</td><td>It saves time to reuse components from my previous workflows (pipelines)</td><td></td><td></td><td>Sometimes</td><td>Non-programmers can use the workflows (pipelines) to run code easily</td><td>New students and new people in the lab can easily use workflows (pipelines)</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>1-5 Components</td><td></td><td></td><td></td><td>Sometimes</td><td></td><td></td><td></td><td></td><td></td><td>Sometimes</td><td></td><td></td><td>To have nice visualizations of an analysis</td><td>To simplify workflows (pipelines) that are complex overall</td><td>To make workflows (pipelines) more understandable to others</td><td></td><td>Sometimes</td><td>It saves time to reuse groupings instead of whole workflows (pipelines)</td><td></td><td></td><td></td><td>Sometimes</td><td>Non-programmers can use groupings more easily than whole workflows (pipelines)</td><td>New students and new people in the lab can easily use groupings</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>Occasionally</td><td></td><td></td><td></td><td></td><td></td><td>Occasionally</td><td>Keeping laboratory notes about what workflows (pipelines) were used in a paper</td><td></td><td></td><td></td><td></td><td>No one knows where the code came from. </td><td>none</td><td>none</td><td>14/05/2014 22:52:00</td><td></td><td></td><td></td><td></td><td></td><td></td><td>US</td><td>CA</td></tr><!--endofrow-->
<!--startofrow--><tr><td>Sometimes</td><td>Often</td><td>Often</td><td>I don't know</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>Very often</td><td></td><td></td><td>It saves time to reuse whole pipelines for similar analyses.</td><td>Very often</td><td>Non-programmers can use the workflows (pipelines) to run code easily</td><td>New students and new people in the lab can easily use workflows (pipelines)</td><td>It saves them time because they do not have to re-implement the code</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>5-10 Components</td><td></td><td></td><td>Very often</td><td>Workflows (pipelines) created by others are difficult to understand</td><td>It is difficult to understand how to prepare the data for a workflow (pipeline)</td><td></td><td></td><td></td><td>I don't know</td><td></td><td></td><td></td><td></td><td></td><td></td><td>I don't know</td><td></td><td></td><td></td><td></td><td>I don't know</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>I don't know</td><td></td><td></td><td></td><td></td><td></td><td>Occasionally</td><td>Keeping laboratory notes about what workflows (pipelines) were used in a paper</td><td></td><td></td><td></td><td></td><td>I'm not sure there is a formal mechanism in place to do this.</td><td></td><td></td><td>14/05/2014 22:52:00</td><td></td><td></td><td></td><td></td><td></td><td></td><td>US</td><td>CA</td></tr><!--endofrow-->
<!--startofrow--><tr><td>Very often</td><td>Often</td><td>Very often</td><td>I don't know</td><td></td><td></td><td>Very often</td><td>It saves time to reuse components from my previous workflows (pipelines)</td><td></td><td>Workflows (pipelines) are a convenient way to organize and store my code</td><td>Workflows (pipelines) make me think of organizing my code better</td><td></td><td></td><td>Workflows (pipelines) are a useful visualization of an overall analysis</td><td></td><td>It's a really intuitive visualization of the underlying code. Sort of brings the code 'to life'!</td><td>I don't know</td><td></td><td></td><td></td><td>I don't know</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>5-10 Components</td><td></td><td></td><td>Often</td><td></td><td></td><td></td><td></td><td></td><td>Very often</td><td></td><td></td><td>To have nice visualizations of an analysis</td><td>To simplify workflows (pipelines) that are complex overall</td><td></td><td></td><td>Often</td><td></td><td></td><td></td><td></td><td>Often</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>Often</td><td></td><td></td><td></td><td></td><td></td><td>I don't know</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>14/05/2014 23:46:00</td><td></td><td></td><td></td><td></td><td></td><td></td><td>IE</td><td>7 </td></tr><!--endofrow-->
<!--startofrow--><tr><td>Very often</td><td>Very often</td><td>Very often</td><td>Very often</td><td></td><td></td><td>Very often</td><td></td><td>Workflows (pipelines) make it easier to track and debug complex code</td><td>Workflows (pipelines) are a convenient way to organize and store my code</td><td></td><td></td><td></td><td></td><td>Workflows (pipelines) facilitate reproducibility</td><td></td><td>Very often</td><td>It saves time to reuse components from my previous workflows (pipelines)</td><td>Workflows (pipelines) give a high-level diagram that helps remember what was done</td><td></td><td>Very often</td><td>Non-programmers can use the workflows (pipelines) to run code easily</td><td>New students and new people in the lab can easily use workflows (pipelines)</td><td>It saves them time because they do not have to re-implement the code</td><td></td><td></td><td></td><td></td><td>Workflows (pipelines) created by others are difficult to understand</td><td>It is difficult to understand how to prepare the data for a workflow (pipeline)</td><td></td><td></td><td>5-10 Components</td><td></td><td></td><td>Very often</td><td></td><td></td><td></td><td></td><td></td><td>Very often</td><td></td><td></td><td></td><td>To simplify workflows (pipelines) that are complex overall</td><td></td><td></td><td>Very often</td><td>It saves time to reuse groupings instead of whole workflows (pipelines)</td><td></td><td></td><td></td><td>Very often</td><td>Non-programmers can use groupings more easily than whole workflows (pipelines)</td><td>New students and new people in the lab can easily use groupings</td><td>It saves them time because they do not have to re-implement the code</td><td></td><td></td><td></td><td></td><td>It is difficult to explain what they do</td><td></td><td></td><td>Often</td><td></td><td></td><td></td><td></td><td></td><td>Often</td><td></td><td>Posting links publicly in a project or personal Web site</td><td></td><td>People do not know how to do it</td><td></td><td></td><td></td><td></td><td>14/05/2014 23:48:00</td><td></td><td></td><td></td><td></td><td></td><td></td><td>IE</td><td>7 </td></tr><!--endofrow-->
<!--startofrow--><tr><td>Very often</td><td>Very often</td><td>Very often</td><td>Very often</td><td></td><td></td><td>Very often</td><td>It saves time to reuse components from my previous workflows (pipelines)</td><td>Workflows (pipelines) make it easier to track and debug complex code</td><td></td><td></td><td></td><td></td><td>Workflows (pipelines) are a useful visualization of an overall analysis</td><td>Workflows (pipelines) facilitate reproducibility</td><td></td><td>Very often</td><td>It saves time to reuse components from my previous workflows (pipelines)</td><td>Workflows (pipelines) give a high-level diagram that helps remember what was done</td><td></td><td>Very often</td><td>Non-programmers can use the workflows (pipelines) to run code easily</td><td>New students and new people in the lab can easily use workflows (pipelines)</td><td>It saves them time because they do not have to re-implement the code</td><td>It makes everyone think of standards by adopting the ways others do things</td><td></td><td></td><td>Others ask too many questions to the creators of the workflows (pipelines)</td><td></td><td></td><td></td><td></td><td>5-10 Components</td><td></td><td></td><td>Very often</td><td></td><td></td><td></td><td></td><td></td><td>I don't know</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>Never</td><td></td><td></td><td></td><td>People do not know how to do it</td><td>People do not find it useful</td><td></td><td></td><td></td><td>15/05/2014 00:01:00</td><td></td><td></td><td></td><td></td><td></td><td></td><td>US</td><td>CA</td></tr><!--endofrow-->
<!--startofrow--><tr><td>Very often</td><td>Very often</td><td>Very often</td><td>Very often</td><td></td><td></td><td>Very often</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>Parellelizing without SGE script</td><td>Very often</td><td>It saves time to reuse components from my previous workflows (pipelines)</td><td>Workflows (pipelines) give a high-level diagram that helps remember what was done</td><td></td><td>Very often</td><td>Non-programmers can use the workflows (pipelines) to run code easily</td><td>New students and new people in the lab can easily use workflows (pipelines)</td><td>It saves them time because they do not have to re-implement the code</td><td>It makes everyone think of standards by adopting the ways others do things</td><td></td><td></td><td></td><td>Workflows (pipelines) created by others are difficult to understand</td><td>It is difficult to understand how to prepare the data for a workflow (pipeline)</td><td></td><td>1-5 Components</td><td></td><td></td><td></td><td>Very often</td><td></td><td></td><td></td><td></td><td></td><td>Very often</td><td></td><td></td><td></td><td></td><td>To make workflows (pipelines) more understandable to others</td><td></td><td>Very often</td><td>It saves time to reuse groupings instead of whole workflows (pipelines)</td><td>Groupings are a convenient way to make my code modular</td><td>Groupings are a convenient way to make my methods more understandable</td><td></td><td>Often</td><td>Non-programmers can use groupings more easily than whole workflows (pipelines)</td><td>New students and new people in the lab can easily use groupings</td><td>It saves them time because they do not have to re-implement the code</td><td>It makes everyone think of standards by adopting the ways others do things</td><td></td><td></td><td></td><td>It is difficult to explain what they do</td><td></td><td></td><td>Often</td><td></td><td></td><td></td><td>It is hard to make them work</td><td></td><td>Occasionally</td><td>Keeping laboratory notes about what workflows (pipelines) were used in a paper</td><td>Posting links publicly in a project or personal Web site</td><td></td><td>People do not know how to do it</td><td>People do not find it useful</td><td></td><td></td><td></td><td>15/05/2014 01:45:00</td><td></td><td></td><td></td><td></td><td></td><td></td><td>US</td><td>CA</td></tr><!--endofrow-->
<!--startofrow--><tr><td>Often</td><td>Sometimes</td><td>Often</td><td>Sometimes</td><td></td><td></td><td>Sometimes</td><td>It saves time to reuse components from my previous workflows (pipelines)</td><td></td><td>Workflows (pipelines) are a convenient way to organize and store my code</td><td></td><td></td><td></td><td></td><td></td><td></td><td>Often</td><td>It saves time to reuse components from my previous workflows (pipelines)</td><td></td><td></td><td>Often</td><td>Non-programmers can use the workflows (pipelines) to run code easily</td><td>New students and new people in the lab can easily use workflows (pipelines)</td><td>It saves them time because they do not have to re-implement the code</td><td>It makes everyone think of standards by adopting the ways others do things</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>5-10 Components</td><td></td><td></td><td>Often</td><td></td><td></td><td></td><td></td><td></td><td>Often</td><td></td><td></td><td>To have nice visualizations of an analysis</td><td></td><td>To make workflows (pipelines) more understandable to others</td><td></td><td>Often</td><td>It saves time to reuse groupings instead of whole workflows (pipelines)</td><td>Groupings are a convenient way to make my code modular</td><td></td><td></td><td>Often</td><td>Non-programmers can use groupings more easily than whole workflows (pipelines)</td><td>New students and new people in the lab can easily use groupings</td><td>It saves them time because they do not have to re-implement the code</td><td>It makes everyone think of standards by adopting the ways others do things</td><td></td><td></td><td></td><td></td><td></td><td></td><td>Sometimes</td><td></td><td></td><td></td><td></td><td></td><td>I don't know</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>16/05/2014 00:06:00</td><td></td><td></td><td></td><td></td><td></td><td></td><td>US</td><td>CA</td></tr><!--endofrow-->
<!--startofrow--><tr><td>Very often</td><td>Often</td><td>Often</td><td>Often</td><td></td><td></td><td>Often</td><td>It saves time to reuse components from my previous workflows (pipelines)</td><td>Workflows (pipelines) make it easier to track and debug complex code</td><td></td><td></td><td>Workflows (pipelines) make me think of making my code modular and more reusable</td><td>Workflows (pipelines) are a convenient way to make my methods more understandable</td><td></td><td></td><td></td><td>Sometimes</td><td>It saves time to reuse components from my previous workflows (pipelines)</td><td>Workflows (pipelines) give a high-level diagram that helps remember what was done</td><td></td><td>Sometimes</td><td>Non-programmers can use the workflows (pipelines) to run code easily</td><td>New students and new people in the lab can easily use workflows (pipelines)</td><td>It saves them time because they do not have to re-implement the code</td><td>It makes everyone think of standards by adopting the ways others do things</td><td></td><td></td><td></td><td></td><td></td><td></td><td>1-5 Components</td><td>5-10 Components</td><td>10-20 Components</td><td>>20 Components</td><td>Sometimes</td><td>Workflows (pipelines) created by others are difficult to understand</td><td></td><td></td><td></td><td>It's helpful if they are well documented</td><td>Often</td><td></td><td></td><td>To have nice visualizations of an analysis</td><td>To simplify workflows (pipelines) that are complex overall</td><td>To make workflows (pipelines) more understandable to others</td><td></td><td>Sometimes</td><td>It saves time to reuse groupings instead of whole workflows (pipelines)</td><td>Groupings are a convenient way to make my code modular</td><td>Groupings are a convenient way to make my methods more understandable</td><td></td><td>Often</td><td></td><td>New students and new people in the lab can easily use groupings</td><td>It saves them time because they do not have to re-implement the code</td><td>It makes everyone think of standards by adopting the ways others do things</td><td></td><td></td><td></td><td></td><td></td><td></td><td>Sometimes</td><td></td><td></td><td></td><td></td><td></td><td>Sometimes</td><td>Keeping laboratory notes about what workflows (pipelines) were used in a paper</td><td></td><td></td><td>People do not know how to do it</td><td></td><td>People are lazy</td><td></td><td></td><td>16/05/2014 00:06:00</td><td></td><td></td><td></td><td></td><td></td><td></td><td>US</td><td>CA</td></tr><!--endofrow-->
<!--startofrow--><tr><td>Very often</td><td>Sometimes</td><td>Very often</td><td>Often</td><td></td><td></td><td>Often</td><td>It saves time to reuse components from my previous workflows (pipelines)</td><td></td><td>Workflows (pipelines) are a convenient way to organize and store my code</td><td>Workflows (pipelines) make me think of organizing my code better</td><td></td><td></td><td>Workflows (pipelines) are a useful visualization of an overall analysis</td><td>Workflows (pipelines) facilitate reproducibility</td><td></td><td>Sometimes</td><td>It saves time to reuse components from my previous workflows (pipelines)</td><td></td><td></td><td>Sometimes</td><td>Non-programmers can use the workflows (pipelines) to run code easily</td><td>New students and new people in the lab can easily use workflows (pipelines)</td><td>It saves them time because they do not have to re-implement the code</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>1-5 Components</td><td></td><td></td><td></td><td>Sometimes</td><td></td><td></td><td></td><td></td><td></td><td>Sometimes</td><td></td><td></td><td>To have nice visualizations of an analysis</td><td>To simplify workflows (pipelines) that are complex overall</td><td>To make workflows (pipelines) more understandable to others</td><td></td><td>Sometimes</td><td>It saves time to reuse groupings instead of whole workflows (pipelines)</td><td>Groupings are a convenient way to make my code modular</td><td></td><td></td><td>Occasionally</td><td>Non-programmers can use groupings more easily than whole workflows (pipelines)</td><td>New students and new people in the lab can easily use groupings</td><td>It saves them time because they do not have to re-implement the code</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>Occasionally</td><td></td><td></td><td></td><td></td><td></td><td>Often</td><td>Keeping laboratory notes about what workflows (pipelines) were used in a paper</td><td></td><td></td><td></td><td></td><td></td><td>Pipeline is a gift from Poseidon himself.</td><td></td><td>16/05/2014 00:07:00</td><td></td><td></td><td></td><td></td><td></td><td></td><td>US</td><td>CA</td></tr><!--endofrow-->
<!--startofrow--><tr><td>Very often</td><td>Very often</td><td>Very often</td><td>Often</td><td>It takes time to learn how to create workflows (pipelines)</td><td></td><td>Very often</td><td>It saves time to reuse components from my previous workflows (pipelines)</td><td></td><td>Workflows (pipelines) are a convenient way to organize and store my code</td><td>Workflows (pipelines) make me think of organizing my code better</td><td></td><td>Workflows (pipelines) are a convenient way to make my methods more understandable</td><td>Workflows (pipelines) are a useful visualization of an overall analysis</td><td>Workflows (pipelines) facilitate reproducibility</td><td></td><td>Very often</td><td>It saves time to reuse components from my previous workflows (pipelines)</td><td>Workflows (pipelines) give a high-level diagram that helps remember what was done</td><td></td><td>Very often</td><td>Non-programmers can use the workflows (pipelines) to run code easily</td><td>New students and new people in the lab can easily use workflows (pipelines)</td><td>It saves them time because they do not have to re-implement the code</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>5-10 Components</td><td></td><td></td><td>Often</td><td>Workflows (pipelines) created by others are difficult to understand</td><td>It is difficult to understand how to prepare the data for a workflow (pipeline)</td><td></td><td>It is hard to make them work</td><td></td><td>Sometimes</td><td></td><td></td><td></td><td>To simplify workflows (pipelines) that are complex overall</td><td>To make workflows (pipelines) more understandable to others</td><td></td><td>Sometimes</td><td></td><td></td><td></td><td></td><td>I don't know</td><td></td><td></td><td></td><td></td><td></td><td>Others ask too many questions to the creators of the workflows (pipelines)</td><td></td><td>It is difficult to explain what they do</td><td>It is difficult to explain how to prepare the data</td><td></td><td>Sometimes</td><td>It is difficult to understand what they do</td><td>It is difficult to understand how to prepare the data</td><td></td><td>It is hard to make them work</td><td></td><td>Very often</td><td>Keeping laboratory notes about what workflows (pipelines) were used in a paper</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>16/05/2014 00:08:00</td><td></td><td></td><td></td><td></td><td></td><td></td><td>US</td><td>CA</td></tr><!--endofrow-->
<!--startofrow--><tr><td>Very often</td><td>Very often</td><td>Often</td><td>Often</td><td></td><td></td><td>Often</td><td></td><td>Workflows (pipelines) make it easier to track and debug complex code</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>Very often</td><td>It saves time to reuse components from my previous workflows (pipelines)</td><td></td><td></td><td>Sometimes</td><td>Non-programmers can use the workflows (pipelines) to run code easily</td><td>New students and new people in the lab can easily use workflows (pipelines)</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>1-5 Components</td><td></td><td></td><td></td><td>Occasionally</td><td>Workflows (pipelines) created by others are difficult to understand</td><td></td><td></td><td>It is hard to make them work</td><td></td><td>Sometimes</td><td>It takes time to learn how to use it</td><td></td><td></td><td>To simplify workflows (pipelines) that are complex overall</td><td></td><td></td><td>Sometimes</td><td></td><td>Groupings are a convenient way to make my code modular</td><td></td><td></td><td>Sometimes</td><td>Non-programmers can use groupings more easily than whole workflows (pipelines)</td><td></td><td></td><td></td><td></td><td></td><td></td><td>It is difficult to explain what they do</td><td></td><td></td><td>Often</td><td></td><td>It is difficult to understand how to prepare the data</td><td></td><td></td><td></td><td>Occasionally</td><td>Keeping laboratory notes about what workflows (pipelines) were used in a paper</td><td>Posting links publicly in a project or personal Web site</td><td></td><td>People do not know how to do it</td><td>People do not find it useful</td><td></td><td></td><td></td><td>16/05/2014 00:21:00</td><td></td><td></td><td></td><td></td><td></td><td></td><td>US</td><td>CA</td></tr><!--endofrow-->
<!--startofrow--><tr><td>Often</td><td>Very often</td><td>Very often</td><td>Very often</td><td></td><td></td><td>Often</td><td>It saves time to reuse components from my previous workflows (pipelines)</td><td></td><td>Workflows (pipelines) are a convenient way to organize and store my code</td><td>Workflows (pipelines) make me think of organizing my code better</td><td></td><td>Workflows (pipelines) are a convenient way to make my methods more understandable</td><td>Workflows (pipelines) are a useful visualization of an overall analysis</td><td></td><td></td><td>Often</td><td>It saves time to reuse components from my previous workflows (pipelines)</td><td>Workflows (pipelines) give a high-level diagram that helps remember what was done</td><td></td><td>Often</td><td>Non-programmers can use the workflows (pipelines) to run code easily</td><td>New students and new people in the lab can easily use workflows (pipelines)</td><td>It saves them time because they do not have to re-implement the code</td><td>It makes everyone think of standards by adopting the ways others do things</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>10-20 Components</td><td>>20 Components</td><td>Often</td><td></td><td></td><td></td><td></td><td></td><td>Often</td><td></td><td></td><td>To have nice visualizations of an analysis</td><td>To simplify workflows (pipelines) that are complex overall</td><td>To make workflows (pipelines) more understandable to others</td><td></td><td>Often</td><td>It saves time to reuse groupings instead of whole workflows (pipelines)</td><td>Groupings are a convenient way to make my code modular</td><td>Groupings are a convenient way to make my methods more understandable</td><td></td><td>Often</td><td>Non-programmers can use groupings more easily than whole workflows (pipelines)</td><td>New students and new people in the lab can easily use groupings</td><td>It saves them time because they do not have to re-implement the code</td><td>It makes everyone think of standards by adopting the ways others do things</td><td></td><td></td><td></td><td></td><td></td><td></td><td>Often</td><td></td><td></td><td></td><td></td><td></td><td>I don't know</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>16/05/2014 00:46:00</td><td></td><td></td><td></td><td></td><td></td><td></td><td>US</td><td>CA</td></tr><!--endofrow-->
<!--startofrow--><tr><td>Sometimes</td><td>Very often</td><td>Often</td><td>Sometimes</td><td>It takes time to learn how to create workflows (pipelines)</td><td>only some experience here</td><td>Sometimes</td><td>It saves time to reuse components from my previous workflows (pipelines)</td><td>Workflows (pipelines) make it easier to track and debug complex code</td><td></td><td></td><td></td><td></td><td>Workflows (pipelines) are a useful visualization of an overall analysis</td><td>Workflows (pipelines) facilitate reproducibility</td><td></td><td>Often</td><td>It saves time to reuse components from my previous workflows (pipelines)</td><td>Workflows (pipelines) give a high-level diagram that helps remember what was done</td><td></td><td>Often</td><td>Non-programmers can use the workflows (pipelines) to run code easily</td><td>New students and new people in the lab can easily use workflows (pipelines)</td><td>It saves them time because they do not have to re-implement the code</td><td>It makes everyone think of standards by adopting the ways others do things</td><td></td><td></td><td></td><td></td><td></td><td>N/A</td><td>1-5 Components</td><td></td><td></td><td>>20 Components</td><td>Often</td><td></td><td></td><td></td><td></td><td></td><td>I don't know</td><td></td><td></td><td></td><td></td><td></td><td>N/A</td><td>I don't know</td><td></td><td></td><td></td><td></td><td>I don't know</td><td></td><td></td><td></td><td></td><td>N/A</td><td></td><td></td><td></td><td></td><td>N/A</td><td>Often</td><td></td><td></td><td></td><td></td><td></td><td>I don't know</td><td></td><td></td><td>N/A</td><td></td><td></td><td>N/A</td><td></td><td>a bit tedious and repetitive</td><td>16/05/2014 19:21:00</td><td></td><td></td><td></td><td></td><td></td><td></td><td>US</td><td>CA</td></tr><!--endofrow-->
<!--startofrow--><tr><td>Very often</td><td>Very often</td><td>Very often</td><td>Often</td><td></td><td></td><td>Often</td><td>It saves time to reuse components from my previous workflows (pipelines)</td><td>Workflows (pipelines) make it easier to track and debug complex code</td><td>Workflows (pipelines) are a convenient way to organize and store my code</td><td>Workflows (pipelines) make me think of organizing my code better</td><td>Workflows (pipelines) make me think of making my code modular and more reusable</td><td>Workflows (pipelines) are a convenient way to make my methods more understandable</td><td>Workflows (pipelines) are a useful visualization of an overall analysis</td><td>Workflows (pipelines) facilitate reproducibility</td><td></td><td>Often</td><td>It saves time to reuse components from my previous workflows (pipelines)</td><td>Workflows (pipelines) give a high-level diagram that helps remember what was done</td><td></td><td>Very often</td><td>Non-programmers can use the workflows (pipelines) to run code easily</td><td>New students and new people in the lab can easily use workflows (pipelines)</td><td></td><td>It makes everyone think of standards by adopting the ways others do things</td><td></td><td></td><td></td><td></td><td></td><td></td><td>1-5 Components</td><td>5-10 Components</td><td>10-20 Components</td><td></td><td>Often</td><td></td><td></td><td></td><td></td><td></td><td>Often</td><td></td><td></td><td>To have nice visualizations of an analysis</td><td>To simplify workflows (pipelines) that are complex overall</td><td>To make workflows (pipelines) more understandable to others</td><td></td><td>Often</td><td>It saves time to reuse groupings instead of whole workflows (pipelines)</td><td>Groupings are a convenient way to make my code modular</td><td>Groupings are a convenient way to make my methods more understandable</td><td></td><td>Often</td><td>Non-programmers can use groupings more easily than whole workflows (pipelines)</td><td>New students and new people in the lab can easily use groupings</td><td></td><td>It makes everyone think of standards by adopting the ways others do things</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>16/05/2014 20:53:00</td><td></td><td></td><td></td><td></td><td></td><td></td><td>US</td><td>CA</td></tr><!--endofrow-->
<!--startofrow--><tr><td></table></body></html>
